/*
 *  Copyright (C) 2023 sberg it-systeme GmbH
 *
 *  Licensed under the EUPL, Version 1.2 or – as soon they will be approved by the
 *  European Commission - subsequent versions of the EUPL (the "Licence");
 *
 * You may not use this work except in compliance with the Licence.
 * You may obtain a copy of the Licence at:
 *
 * https://joinup.ec.europa.eu/software/page/eupl
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the Licence is distributed on an "AS IS" basis,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the Licence for the specific language governing permissions and limitations under the Licence.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.01.10 at 03:08:22 PM CET 
//


package net.sberg.elbook.kartendatentransfer;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ProfessionItemKey.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="ProfessionItemKey"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Ärztin/Arzt"/&gt;
 *     &lt;enumeration value="Zahnärztin/Zahnarzt"/&gt;
 *     &lt;enumeration value="Apotheker/-in"/&gt;
 *     &lt;enumeration value="Apothekerassistent/-in"/&gt;
 *     &lt;enumeration value="Pharmazieingenieur/-in"/&gt;
 *     &lt;enumeration value="pharmazeutisch-technische/-r Assistent/-in"/&gt;
 *     &lt;enumeration value="pharmazeutisch-kaufmännische/-r Angestellte"/&gt;
 *     &lt;enumeration value="Apothekenhelfer/-in"/&gt;
 *     &lt;enumeration value="Apothekenassistent/-in"/&gt;
 *     &lt;enumeration value="Pharmazeutische/-r Assistent/-in"/&gt;
 *     &lt;enumeration value="Apothekenfacharbeiter/-in"/&gt;
 *     &lt;enumeration value="Pharmaziepraktikant/-in"/&gt;
 *     &lt;enumeration value="Stud.pharm. oder Famulant/-in"/&gt;
 *     &lt;enumeration value="PTA-Praktikant/-in"/&gt;
 *     &lt;enumeration value="PKA Auszubildende/-r"/&gt;
 *     &lt;enumeration value="Psychotherapeut/-in"/&gt;
 *     &lt;enumeration value="Psychologische/-r Psychotherapeut/-in"/&gt;
 *     &lt;enumeration value="Kinder- und Jugendlichenpsychotherapeut/-in"/&gt;
 *     &lt;enumeration value="Rettungsassistent/-in"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "ProfessionItemKey")
@XmlEnum
public enum ProfessionItemKey {

    @XmlEnumValue("\u00c4rztin/Arzt")
    ÄRZTIN_ARZT("\u00c4rztin/Arzt"),
    @XmlEnumValue("Zahn\u00e4rztin/Zahnarzt")
    ZAHNÄRZTIN_ZAHNARZT("Zahn\u00e4rztin/Zahnarzt"),
    @XmlEnumValue("Apotheker/-in")
    APOTHEKER_IN("Apotheker/-in"),
    @XmlEnumValue("Apothekerassistent/-in")
    APOTHEKERASSISTENT_IN("Apothekerassistent/-in"),
    @XmlEnumValue("Pharmazieingenieur/-in")
    PHARMAZIEINGENIEUR_IN("Pharmazieingenieur/-in"),
    @XmlEnumValue("pharmazeutisch-technische/-r Assistent/-in")
    PHARMAZEUTISCH_TECHNISCHE_R_ASSISTENT_IN("pharmazeutisch-technische/-r Assistent/-in"),
    @XmlEnumValue("pharmazeutisch-kaufm\u00e4nnische/-r Angestellte")
    PHARMAZEUTISCH_KAUFMÄNNISCHE_R_ANGESTELLTE("pharmazeutisch-kaufm\u00e4nnische/-r Angestellte"),
    @XmlEnumValue("Apothekenhelfer/-in")
    APOTHEKENHELFER_IN("Apothekenhelfer/-in"),
    @XmlEnumValue("Apothekenassistent/-in")
    APOTHEKENASSISTENT_IN("Apothekenassistent/-in"),
    @XmlEnumValue("Pharmazeutische/-r Assistent/-in")
    PHARMAZEUTISCHE_R_ASSISTENT_IN("Pharmazeutische/-r Assistent/-in"),
    @XmlEnumValue("Apothekenfacharbeiter/-in")
    APOTHEKENFACHARBEITER_IN("Apothekenfacharbeiter/-in"),
    @XmlEnumValue("Pharmaziepraktikant/-in")
    PHARMAZIEPRAKTIKANT_IN("Pharmaziepraktikant/-in"),
    @XmlEnumValue("Stud.pharm. oder Famulant/-in")
    STUD_PHARM_ODER_FAMULANT_IN("Stud.pharm. oder Famulant/-in"),
    @XmlEnumValue("PTA-Praktikant/-in")
    PTA_PRAKTIKANT_IN("PTA-Praktikant/-in"),
    @XmlEnumValue("PKA Auszubildende/-r")
    PKA_AUSZUBILDENDE_R("PKA Auszubildende/-r"),
    @XmlEnumValue("Psychotherapeut/-in")
    PSYCHOTHERAPEUT_IN("Psychotherapeut/-in"),
    @XmlEnumValue("Psychologische/-r Psychotherapeut/-in")
    PSYCHOLOGISCHE_R_PSYCHOTHERAPEUT_IN("Psychologische/-r Psychotherapeut/-in"),
    @XmlEnumValue("Kinder- und Jugendlichenpsychotherapeut/-in")
    KINDER_UND_JUGENDLICHENPSYCHOTHERAPEUT_IN("Kinder- und Jugendlichenpsychotherapeut/-in"),
    @XmlEnumValue("Rettungsassistent/-in")
    RETTUNGSASSISTENT_IN("Rettungsassistent/-in");
    private final String value;

    ProfessionItemKey(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ProfessionItemKey fromValue(String v) {
        for (ProfessionItemKey c: ProfessionItemKey.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
